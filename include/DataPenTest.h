#ifndef DATAPEN_TEST_H
#define DATAPEN_TEST_H
/** @AUTHORS = Joshua Weinstein
 * @EMAIL = jweinst1@berkeley.edu
 * @notes = File that contains unit test code
 */

 #define TESTVALUE_DATA_SZ 100

// Unit testing object used for comparing across types
struct DataTestValue
{
public:
        enum Type
        {
                type_int,
                type_char,
                type_uchar,
                type_long,
                type_data,
                type_none
        };
public:
        Type type;
        int Int;
        char Char;
        unsigned char Uchar;
        long Long;
        unsigned char Data[TESTVALUE_DATA_SZ];

        DataTestValue() : type(type_none)
        {
        }

        DataTestValue(int i) : Int(i), Type(type_int)
        {

        }

        DataTestValue(char ch) : Char(ch), Type(type_char)
                ~DataTestValue()
        {
        }

        bool operator==(const DataTestValue& other) const
        {
                if(type != other.type) return false;
                else return true;
        }
};

#endif
